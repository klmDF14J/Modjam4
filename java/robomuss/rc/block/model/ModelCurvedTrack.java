// Date: 17/05/2014 20:22:09
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package robomuss.rc.block.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelCurvedTrack extends ModelBase
{
  //fields
    ModelRenderer Base_1;
    ModelRenderer Base_2;
    ModelRenderer Part_1;
    ModelRenderer Part_2;
    ModelRenderer Part_3;
    ModelRenderer Part_4;
    ModelRenderer Part_5;
    ModelRenderer Part_6;
    ModelRenderer Part_7;
    ModelRenderer Part_8;
    ModelRenderer Part_9;
    ModelRenderer Part_10;
    ModelRenderer Side_1;
    ModelRenderer Side_2;
    ModelRenderer Side_3;
    ModelRenderer Side_4;
    ModelRenderer Side_5;
    ModelRenderer Side_6;
    ModelRenderer Side_7;
    ModelRenderer Side_8;
    ModelRenderer Side_9;
    ModelRenderer Top_1;
    ModelRenderer Top_2;
    ModelRenderer Top_3;
    ModelRenderer Shape1;
    ModelRenderer Shape2;
  
  public ModelCurvedTrack()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Base_1 = new ModelRenderer(this, 0, 0);
      Base_1.addBox(0F, 0F, 0F, 4, 3, 6);
      Base_1.setRotationPoint(-2F, 21F, 2F);
      Base_1.setTextureSize(64, 32);
      Base_1.mirror = true;
      setRotation(Base_1, 0F, 0F, 0F);
      Base_2 = new ModelRenderer(this, 0, 0);
      Base_2.addBox(0F, 0F, 0F, 10, 3, 4);
      Base_2.setRotationPoint(-2F, 21F, -2F);
      Base_2.setTextureSize(64, 32);
      Base_2.mirror = true;
      setRotation(Base_2, 0F, 0F, 0F);
      Part_1 = new ModelRenderer(this, 0, 0);
      Part_1.addBox(0F, 0F, 0F, 1, 1, 2);
      Part_1.setRotationPoint(6F, 21.5F, -4F);
      Part_1.setTextureSize(64, 32);
      Part_1.mirror = true;
      setRotation(Part_1, 0F, 0F, 0F);
      Part_2 = new ModelRenderer(this, 0, 0);
      Part_2.addBox(0F, 0F, 0F, 1, 1, 2);
      Part_2.setRotationPoint(2F, 21.5F, -4F);
      Part_2.setTextureSize(64, 32);
      Part_2.mirror = true;
      setRotation(Part_2, 0F, 0F, 0F);
      Part_3 = new ModelRenderer(this, 0, 0);
      Part_3.addBox(0F, 0F, 0F, 1, 1, 2);
      Part_3.setRotationPoint(-2F, 21.5F, -4F);
      Part_3.setTextureSize(64, 32);
      Part_3.mirror = true;
      setRotation(Part_3, 0F, 0F, 0F);
      Part_4 = new ModelRenderer(this, 0, 0);
      Part_4.addBox(0F, 0F, 0F, 1, 1, 2);
      Part_4.setRotationPoint(6F, 21.5F, 2F);
      Part_4.setTextureSize(64, 32);
      Part_4.mirror = true;
      setRotation(Part_4, 0F, 0F, 0F);
      Part_5 = new ModelRenderer(this, 0, 0);
      Part_5.addBox(0F, 0F, 0F, 2, 1, 1);
      Part_5.setRotationPoint(-4F, 21.5F, -2F);
      Part_5.setTextureSize(64, 32);
      Part_5.mirror = true;
      setRotation(Part_5, 0F, 0F, 0F);
      Part_6 = new ModelRenderer(this, 0, 0);
      Part_6.addBox(0F, 0F, 0F, 2, 1, 1);
      Part_6.setRotationPoint(-4F, 21.5F, 2F);
      Part_6.setTextureSize(64, 32);
      Part_6.mirror = true;
      setRotation(Part_6, 0F, 0F, 0F);
      Part_7 = new ModelRenderer(this, 0, 0);
      Part_7.addBox(0F, 0F, 0F, 2, 1, 1);
      Part_7.setRotationPoint(-4F, 21.5F, 6F);
      Part_7.setTextureSize(64, 32);
      Part_7.mirror = true;
      setRotation(Part_7, 0F, 0F, 0F);
      Part_8 = new ModelRenderer(this, 0, 0);
      Part_8.addBox(0F, 0F, 0F, 2, 1, 1);
      Part_8.setRotationPoint(2F, 21.5F, 6F);
      Part_8.setTextureSize(64, 32);
      Part_8.mirror = true;
      setRotation(Part_8, 0F, 0F, 0F);
      Part_9 = new ModelRenderer(this, 0, 0);
      Part_9.addBox(0F, 0F, 0F, 1, 1, 1);
      Part_9.setRotationPoint(2F, 21.5F, 2F);
      Part_9.setTextureSize(64, 32);
      Part_9.mirror = true;
      setRotation(Part_9, 0F, 0F, 0F);
      Part_10 = new ModelRenderer(this, 0, 0);
      Part_10.addBox(0F, 0F, 0F, 1, 1, 1);
      Part_10.setRotationPoint(3F, 21.5F, 3F);
      Part_10.setTextureSize(64, 32);
      Part_10.mirror = true;
      setRotation(Part_10, 0F, 0F, 0F);
      Side_1 = new ModelRenderer(this, 0, 0);
      Side_1.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_1.setRotationPoint(-5F, 19.5F, -2F);
      Side_1.setTextureSize(64, 32);
      Side_1.mirror = true;
      setRotation(Side_1, 0F, 0F, 0F);
      Side_2 = new ModelRenderer(this, 0, 0);
      Side_2.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_2.setRotationPoint(-5F, 19.5F, 2F);
      Side_2.setTextureSize(64, 32);
      Side_2.mirror = true;
      setRotation(Side_2, 0F, 0F, 0F);
      Side_3 = new ModelRenderer(this, 0, 0);
      Side_3.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_3.setRotationPoint(-5F, 19.5F, 6F);
      Side_3.setTextureSize(64, 32);
      Side_3.mirror = true;
      setRotation(Side_3, 0F, 0F, 0F);
      Side_4 = new ModelRenderer(this, 0, 0);
      Side_4.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_4.setRotationPoint(4F, 19.5F, 6F);
      Side_4.setTextureSize(64, 32);
      Side_4.mirror = true;
      setRotation(Side_4, 0F, 0F, 0F);
      Side_5 = new ModelRenderer(this, 0, 0);
      Side_5.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_5.setRotationPoint(4F, 19.5F, 4F);
      Side_5.setTextureSize(64, 32);
      Side_5.mirror = true;
      setRotation(Side_5, 0F, 0F, 0F);
      Side_6 = new ModelRenderer(this, 0, 0);
      Side_6.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_6.setRotationPoint(6F, 19.5F, 4F);
      Side_6.setTextureSize(64, 32);
      Side_6.mirror = true;
      setRotation(Side_6, 0F, 0F, 0F);
      Side_7 = new ModelRenderer(this, 0, 0);
      Side_7.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_7.setRotationPoint(-2F, 19.5F, -5F);
      Side_7.setTextureSize(64, 32);
      Side_7.mirror = true;
      setRotation(Side_7, 0F, 0F, 0F);
      Side_8 = new ModelRenderer(this, 0, 0);
      Side_8.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_8.setRotationPoint(2F, 19.5F, -5F);
      Side_8.setTextureSize(64, 32);
      Side_8.mirror = true;
      setRotation(Side_8, 0F, 0F, 0F);
      Side_9 = new ModelRenderer(this, 0, 0);
      Side_9.addBox(0F, 0F, 0F, 1, 3, 1);
      Side_9.setRotationPoint(6F, 19.5F, -5F);
      Side_9.setTextureSize(64, 32);
      Side_9.mirror = true;
      setRotation(Side_9, 0F, 0F, 0F);
      Top_1 = new ModelRenderer(this, 0, 0);
      Top_1.addBox(0F, 0F, 0F, 12, 2, 3);
      Top_1.setRotationPoint(-4F, 18F, -6.5F);
      Top_1.setTextureSize(64, 32);
      Top_1.mirror = true;
      setRotation(Top_1, 0F, 0F, 0F);
      Top_2 = new ModelRenderer(this, 0, 0);
      Top_2.addBox(0F, 0F, 0F, 3, 2, 14);
      Top_2.setRotationPoint(-6.5F, 18F, -6F);
      Top_2.setTextureSize(64, 32);
      Top_2.mirror = true;
      setRotation(Top_2, 0F, 0F, 0F);
      Top_3 = new ModelRenderer(this, 0, 0);
      Top_3.addBox(0F, 0F, 0F, 3, 2, 2);
      Top_3.setRotationPoint(-6.5F, 18F, -6.5F);
      Top_3.setTextureSize(64, 32);
      Top_3.mirror = true;
      setRotation(Top_3, 0F, 0F, 0F);
      Shape1 = new ModelRenderer(this, 0, 0);
      Shape1.addBox(0F, 0F, 0F, 5, 2, 3);
      Shape1.setRotationPoint(3F, 18F, 3.5F);
      Shape1.setTextureSize(64, 32);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, 0F, 0F);
      Shape2 = new ModelRenderer(this, 0, 0);
      Shape2.addBox(0F, 0F, 0F, 3, 2, 5);
      Shape2.setRotationPoint(2F, 18F, 3.5F);
      Shape2.setTextureSize(64, 32);
      Shape2.mirror = true;
      setRotation(Shape2, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Base_1.render(f5);
    Base_2.render(f5);
    Part_1.render(f5);
    Part_2.render(f5);
    Part_3.render(f5);
    Part_4.render(f5);
    Part_5.render(f5);
    Part_6.render(f5);
    Part_7.render(f5);
    Part_8.render(f5);
    Part_9.render(f5);
    Part_10.render(f5);
    Side_1.render(f5);
    Side_2.render(f5);
    Side_3.render(f5);
    Side_4.render(f5);
    Side_5.render(f5);
    Side_6.render(f5);
    Side_7.render(f5);
    Side_8.render(f5);
    Side_9.render(f5);
    Top_1.render(f5);
    Top_2.render(f5);
    Top_3.render(f5);
    Shape1.render(f5);
    Shape2.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
  }

}
